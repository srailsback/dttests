using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using Newtonsoft;
using DTS.DataTables.MVC;

namespace dttests.tests
{
    [TestClass]
    public class CryptoTests
    {
        [TestMethod]
        public void DecodeBase64()
        {
            string encodedString = "W3sibmFtZSI6IlN0ZXZlIn0seyJuYW1lIjoiSm9obiJ9XQ==";
            byte[] data = System.Convert.FromBase64String(encodedString);
            string decodedString = System.Text.ASCIIEncoding.ASCII.GetString(data);
            var result = Newtonsoft.Json.JsonConvert.DeserializeObject<IList<Foo>>(decodedString);
            Assert.AreEqual("Steve", result.First().name);
        }


        [TestMethod]
        public void DecodeDataTablesBase64()
        {
            string encodedString = "eyJkcmF3IjoxLCJjb2x1bW5zIjpbeyJkYXRhIjoiU2VnbWVudEtleSIsIm5hbWUiOiJTZWdtZW50S2V5Iiwic2VhcmNoYWJsZSI6dHJ1ZSwib3JkZXJhYmxlIjp0cnVlLCJzZWFyY2giOnsidmFsdWUiOiIiLCJyZWdleCI6ZmFsc2V9fSx7ImRhdGEiOiJGSVBTIiwibmFtZSI6IkZJUFMiLCJzZWFyY2hhYmxlIjp0cnVlLCJvcmRlcmFibGUiOnRydWUsInNlYXJjaCI6eyJ2YWx1ZSI6IiIsInJlZ2V4IjpmYWxzZX19LHsiZGF0YSI6IlJPVVRFIiwibmFtZSI6IlJPVVRFIiwic2VhcmNoYWJsZSI6dHJ1ZSwib3JkZXJhYmxlIjp0cnVlLCJzZWFyY2giOnsidmFsdWUiOiIiLCJyZWdleCI6ZmFsc2V9fSx7ImRhdGEiOiJTRUdNSUQiLCJuYW1lIjoiU0VHTUlEIiwic2VhcmNoYWJsZSI6dHJ1ZSwib3JkZXJhYmxlIjp0cnVlLCJzZWFyY2giOnsidmFsdWUiOiIiLCJyZWdleCI6ZmFsc2V9fSx7ImRhdGEiOiJMRU5HVEgiLCJuYW1lIjoiTEVOR1RIIiwic2VhcmNoYWJsZSI6dHJ1ZSwib3JkZXJhYmxlIjp0cnVlLCJzZWFyY2giOnsidmFsdWUiOiIiLCJyZWdleCI6ZmFsc2V9fSx7ImRhdGEiOiJVUERBVEVZUiIsIm5hbWUiOiJVUERBVEVZUiIsInNlYXJjaGFibGUiOnRydWUsIm9yZGVyYWJsZSI6dHJ1ZSwic2VhcmNoIjp7InZhbHVlIjoiIiwicmVnZXgiOmZhbHNlfX0seyJkYXRhIjoiRklQU0NPVU5UWSIsIm5hbWUiOiJGSVBTQ09VTlRZIiwic2VhcmNoYWJsZSI6dHJ1ZSwib3JkZXJhYmxlIjp0cnVlLCJzZWFyY2giOnsidmFsdWUiOiIiLCJyZWdleCI6ZmFsc2V9fSx7ImRhdGEiOiJGVU5DQ0xBU1NJRCIsIm5hbWUiOiJGVU5DQ0xBU1NJRCIsInNlYXJjaGFibGUiOnRydWUsIm9yZGVyYWJsZSI6dHJ1ZSwic2VhcmNoIjp7InZhbHVlIjoiIiwicmVnZXgiOmZhbHNlfX0seyJkYXRhIjoiR09WTEVWRUwiLCJuYW1lIjoiR09WTEVWRUwiLCJzZWFyY2hhYmxlIjp0cnVlLCJvcmRlcmFibGUiOnRydWUsInNlYXJjaCI6eyJ2YWx1ZSI6IiIsInJlZ2V4IjpmYWxzZX19LHsiZGF0YSI6IkFETUlOQ0xBU1MiLCJuYW1lIjoiQURNSU5DTEFTUyIsInNlYXJjaGFibGUiOnRydWUsIm9yZGVyYWJsZSI6dHJ1ZSwic2VhcmNoIjp7InZhbHVlIjoiIiwicmVnZXgiOmZhbHNlfX0seyJkYXRhIjoiUE9QVUxBVElPTiIsIm5hbWUiOiJQT1BVTEFUSU9OIiwic2VhcmNoYWJsZSI6dHJ1ZSwib3JkZXJhYmxlIjp0cnVlLCJzZWFyY2giOnsidmFsdWUiOiIiLCJyZWdleCI6ZmFsc2V9fSx7ImRhdGEiOiJVUkJBTiIsIm5hbWUiOiJVUkJBTiIsInNlYXJjaGFibGUiOnRydWUsIm9yZGVyYWJsZSI6dHJ1ZSwic2VhcmNoIjp7InZhbHVlIjoiIiwicmVnZXgiOmZhbHNlfX0seyJkYXRhIjoiTkFBUVNJRCIsIm5hbWUiOiJOQUFRU0lEIiwic2VhcmNoYWJsZSI6dHJ1ZSwib3JkZXJhYmxlIjp0cnVlLCJzZWFyY2giOnsidmFsdWUiOiIiLCJyZWdleCI6ZmFsc2V9fSx7ImRhdGEiOiJOSFNERVNJRyIsIm5hbWUiOiJOSFNERVNJRyIsInNlYXJjaGFibGUiOnRydWUsIm9yZGVyYWJsZSI6dHJ1ZSwic2VhcmNoIjp7InZhbHVlIjoiIiwicmVnZXgiOmZhbHNlfX0seyJkYXRhIjoiU1BFQ0lBTFNZUyIsIm5hbWUiOiJTUEVDSUFMU1lTIiwic2VhcmNoYWJsZSI6dHJ1ZSwib3JkZXJhYmxlIjp0cnVlLCJzZWFyY2giOnsidmFsdWUiOiIiLCJyZWdleCI6ZmFsc2V9fSx7ImRhdGEiOiJBQ0NFU1MiLCJuYW1lIjoiQUNDRVNTIiwic2VhcmNoYWJsZSI6dHJ1ZSwib3JkZXJhYmxlIjp0cnVlLCJzZWFyY2giOnsidmFsdWUiOiIiLCJyZWdleCI6ZmFsc2V9fSx7ImRhdGEiOiJUUktSRVNUUklDVCIsIm5hbWUiOiJUUktSRVNUUklDVCIsInNlYXJjaGFibGUiOnRydWUsIm9yZGVyYWJsZSI6dHJ1ZSwic2VhcmNoIjp7InZhbHVlIjoiIiwicmVnZXgiOmZhbHNlfX0seyJkYXRhIjoiUFJJSVJJIiwibmFtZSI6IlBSSUlSSSIsInNlYXJjaGFibGUiOnRydWUsIm9yZGVyYWJsZSI6dHJ1ZSwic2VhcmNoIjp7InZhbHVlIjoiIiwicmVnZXgiOmZhbHNlfX0seyJkYXRhIjoiUFJJSVJJREFURSIsIm5hbWUiOiJQUklJUklEQVRFIiwic2VhcmNoYWJsZSI6dHJ1ZSwib3JkZXJhYmxlIjp0cnVlLCJzZWFyY2giOnsidmFsdWUiOiIiLCJyZWdleCI6ZmFsc2V9fSx7ImRhdGEiOiJQUklQU0kiLCJuYW1lIjoiUFJJUFNJIiwic2VhcmNoYWJsZSI6dHJ1ZSwib3JkZXJhYmxlIjp0cnVlLCJzZWFyY2giOnsidmFsdWUiOiIiLCJyZWdleCI6ZmFsc2V9fSx7ImRhdGEiOiJQUk9KWVIiLCJuYW1lIjoiUFJPSllSIiwic2VhcmNoYWJsZSI6dHJ1ZSwib3JkZXJhYmxlIjp0cnVlLCJzZWFyY2giOnsidmFsdWUiOiIiLCJyZWdleCI6ZmFsc2V9fSx7ImRhdGEiOiJCVUlMVFlSIiwibmFtZSI6IkJVSUxUWVIiLCJzZWFyY2hhYmxlIjp0cnVlLCJvcmRlcmFibGUiOnRydWUsInNlYXJjaCI6eyJ2YWx1ZSI6IiIsInJlZ2V4IjpmYWxzZX19LHsiZGF0YSI6IklOU1BZUiIsIm5hbWUiOiJJTlNQWVIiLCJzZWFyY2hhYmxlIjp0cnVlLCJvcmRlcmFibGUiOnRydWUsInNlYXJjaCI6eyJ2YWx1ZSI6IiIsInJlZ2V4IjpmYWxzZX19LHsiZGF0YSI6IlBSSVRSRUFUTUVOVERFUFRIIiwibmFtZSI6IlBSSVRSRUFUTUVOVERFUFRIIiwic2VhcmNoYWJsZSI6dHJ1ZSwib3JkZXJhYmxlIjp0cnVlLCJzZWFyY2giOnsidmFsdWUiOiIiLCJyZWdleCI6ZmFsc2V9fSx7ImRhdGEiOiJQUklTVVJGIiwibmFtZSI6IlBSSVNVUkYiLCJzZWFyY2hhYmxlIjp0cnVlLCJvcmRlcmFibGUiOnRydWUsInNlYXJjaCI6eyJ2YWx1ZSI6IiIsInJlZ2V4IjpmYWxzZX19LHsiZGF0YSI6IlBSSVNVUkZXRCIsIm5hbWUiOiJQUklTVVJGV0QiLCJzZWFyY2hhYmxlIjp0cnVlLCJvcmRlcmFibGUiOnRydWUsInNlYXJjaCI6eyJ2YWx1ZSI6IiIsInJlZ2V4IjpmYWxzZX19LHsiZGF0YSI6IlRIUlVMTlFUWSIsIm5hbWUiOiJUSFJVTE5RVFkiLCJzZWFyY2hhYmxlIjp0cnVlLCJvcmRlcmFibGUiOnRydWUsInNlYXJjaCI6eyJ2YWx1ZSI6IiIsInJlZ2V4IjpmYWxzZX19LHsiZGF0YSI6IlBSSVRIUlVMTldEIiwibmFtZSI6IlBSSVRIUlVMTldEIiwic2VhcmNoYWJsZSI6dHJ1ZSwib3JkZXJhYmxlIjp0cnVlLCJzZWFyY2giOnsidmFsdWUiOiIiLCJyZWdleCI6ZmFsc2V9fSx7ImRhdGEiOiJPUEVSQVRJT04iLCJuYW1lIjoiT1BFUkFUSU9OIiwic2VhcmNoYWJsZSI6dHJ1ZSwib3JkZXJhYmxlIjp0cnVlLCJzZWFyY2giOnsidmFsdWUiOiIiLCJyZWdleCI6ZmFsc2V9fSx7ImRhdGEiOiJSUlhJRCIsIm5hbWUiOiJSUlhJRCIsInNlYXJjaGFibGUiOnRydWUsIm9yZGVyYWJsZSI6dHJ1ZSwic2VhcmNoIjp7InZhbHVlIjoiIiwicmVnZXgiOmZhbHNlfX0seyJkYXRhIjoiU1RSSUQiLCJuYW1lIjoiU1RSSUQiLCJzZWFyY2hhYmxlIjp0cnVlLCJvcmRlcmFibGUiOnRydWUsInNlYXJjaCI6eyJ2YWx1ZSI6IiIsInJlZ2V4IjpmYWxzZX19LHsiZGF0YSI6IlJFR0lPTiIsIm5hbWUiOiJSRUdJT04iLCJzZWFyY2hhYmxlIjp0cnVlLCJvcmRlcmFibGUiOnRydWUsInNlYXJjaCI6eyJ2YWx1ZSI6IiIsInJlZ2V4IjpmYWxzZX19LHsiZGF0YSI6IlRQUklEIiwibmFtZSI6IlRQUklEIiwic2VhcmNoYWJsZSI6dHJ1ZSwib3JkZXJhYmxlIjp0cnVlLCJzZWFyY2giOnsidmFsdWUiOiIiLCJyZWdleCI6ZmFsc2V9fSx7ImRhdGEiOiJURVJSQUlOIiwibmFtZSI6IlRFUlJBSU4iLCJzZWFyY2hhYmxlIjp0cnVlLCJvcmRlcmFibGUiOnRydWUsInNlYXJjaCI6eyJ2YWx1ZSI6IiIsInJlZ2V4IjpmYWxzZX19LHsiZGF0YSI6IkZPUkVTVFJPVVRFIiwibmFtZSI6IkZPUkVTVFJPVVRFIiwic2VhcmNoYWJsZSI6dHJ1ZSwib3JkZXJhYmxlIjp0cnVlLCJzZWFyY2giOnsidmFsdWUiOiIiLCJyZWdleCI6ZmFsc2V9fSx7ImRhdGEiOiJST1VURVNJR04iLCJuYW1lIjoiUk9VVEVTSUdOIiwic2VhcmNoYWJsZSI6dHJ1ZSwib3JkZXJhYmxlIjp0cnVlLCJzZWFyY2giOnsidmFsdWUiOiIiLCJyZWdleCI6ZmFsc2V9fSx7ImRhdGEiOiJST1VURVNJR05RVUFMIiwibmFtZSI6IlJPVVRFU0lHTlFVQUwiLCJzZWFyY2hhYmxlIjp0cnVlLCJvcmRlcmFibGUiOnRydWUsInNlYXJjaCI6eyJ2YWx1ZSI6IiIsInJlZ2V4IjpmYWxzZX19LHsiZGF0YSI6IkpVUlNQTElUIiwibmFtZSI6IkpVUlNQTElUIiwic2VhcmNoYWJsZSI6dHJ1ZSwib3JkZXJhYmxlIjp0cnVlLCJzZWFyY2giOnsidmFsdWUiOiIiLCJyZWdleCI6ZmFsc2V9fSx7ImRhdGEiOiJST1VURU5BTUUiLCJuYW1lIjoiUk9VVEVOQU1FIiwic2VhcmNoYWJsZSI6dHJ1ZSwib3JkZXJhYmxlIjp0cnVlLCJzZWFyY2giOnsidmFsdWUiOiIiLCJyZWdleCI6ZmFsc2V9fSx7ImRhdGEiOiJST1VURVNVRkZJWCIsIm5hbWUiOiJST1VURVNVRkZJWCIsInNlYXJjaGFibGUiOnRydWUsIm9yZGVyYWJsZSI6dHJ1ZSwic2VhcmNoIjp7InZhbHVlIjoiIiwicmVnZXgiOmZhbHNlfX0seyJkYXRhIjoiRlJPTUZFQVRVUkUiLCJuYW1lIjoiRlJPTUZFQVRVUkUiLCJzZWFyY2hhYmxlIjp0cnVlLCJvcmRlcmFibGUiOnRydWUsInNlYXJjaCI6eyJ2YWx1ZSI6IiIsInJlZ2V4IjpmYWxzZX19LHsiZGF0YSI6IlRPRkVBVFVSRSIsIm5hbWUiOiJUT0ZFQVRVUkUiLCJzZWFyY2hhYmxlIjp0cnVlLCJvcmRlcmFibGUiOnRydWUsInNlYXJjaCI6eyJ2YWx1ZSI6IiIsInJlZ2V4IjpmYWxzZX19LHsiZGF0YSI6IlNFR01ESVIiLCJuYW1lIjoiU0VHTURJUiIsInNlYXJjaGFibGUiOnRydWUsIm9yZGVyYWJsZSI6dHJ1ZSwic2VhcmNoIjp7InZhbHVlIjoiIiwicmVnZXgiOmZhbHNlfX0seyJkYXRhIjoiU0VHTVBSRUZJWCIsIm5hbWUiOiJTRUdNUFJFRklYIiwic2VhcmNoYWJsZSI6dHJ1ZSwib3JkZXJhYmxlIjp0cnVlLCJzZWFyY2giOnsidmFsdWUiOiIiLCJyZWdleCI6ZmFsc2V9fSx7ImRhdGEiOiJHSVNJRCIsIm5hbWUiOiJHSVNJRCIsInNlYXJjaGFibGUiOnRydWUsIm9yZGVyYWJsZSI6dHJ1ZSwic2VhcmNoIjp7InZhbHVlIjoiIiwicmVnZXgiOmZhbHNlfX0seyJkYXRhIjoiQ09VTlRTVEFUSU9OSUQiLCJuYW1lIjoiQ09VTlRTVEFUSU9OSUQiLCJzZWFyY2hhYmxlIjp0cnVlLCJvcmRlcmFibGUiOnRydWUsInNlYXJjaCI6eyJ2YWx1ZSI6IiIsInJlZ2V4IjpmYWxzZX19LHsiZGF0YSI6IlBSSVlSUkVIQUIiLCJuYW1lIjoiUFJJWVJSRUhBQiIsInNlYXJjaGFibGUiOnRydWUsIm9yZGVyYWJsZSI6dHJ1ZSwic2VhcmNoIjp7InZhbHVlIjoiIiwicmVnZXgiOmZhbHNlfX0seyJkYXRhIjoiSVNESVZJREVEIiwibmFtZSI6IklTRElWSURFRCIsInNlYXJjaGFibGUiOnRydWUsIm9yZGVyYWJsZSI6dHJ1ZSwic2VhcmNoIjp7InZhbHVlIjoiIiwicmVnZXgiOmZhbHNlfX0seyJkYXRhIjoiTFJTUk9VVEUiLCJuYW1lIjoiTFJTUk9VVEUiLCJzZWFyY2hhYmxlIjp0cnVlLCJvcmRlcmFibGUiOnRydWUsInNlYXJjaCI6eyJ2YWx1ZSI6IiIsInJlZ2V4IjpmYWxzZX19LHsiZGF0YSI6IkZST01NRUFTIiwibmFtZSI6IkZST01NRUFTIiwic2VhcmNoYWJsZSI6dHJ1ZSwib3JkZXJhYmxlIjp0cnVlLCJzZWFyY2giOnsidmFsdWUiOiIiLCJyZWdleCI6ZmFsc2V9fSx7ImRhdGEiOiJUT01FQVMiLCJuYW1lIjoiVE9NRUFTIiwic2VhcmNoYWJsZSI6dHJ1ZSwib3JkZXJhYmxlIjp0cnVlLCJzZWFyY2giOnsidmFsdWUiOiIiLCJyZWdleCI6ZmFsc2V9fV0sIm9yZGVyIjpbeyJjb2x1bW4iOjEsImRpciI6ImFzYyJ9XSwic3RhcnQiOjAsImxlbmd0aCI6MTAsInNlYXJjaCI6eyJ2YWx1ZSI6IiIsInJlZ2V4IjpmYWxzZX19";
            byte[] data = System.Convert.FromBase64String(encodedString);
            string decodedString = System.Text.ASCIIEncoding.ASCII.GetString(data);
            var result = (DataTablesRequest) Newtonsoft.Json.JsonConvert.DeserializeObject(decodedString, typeof(DataTablesRequest));
            Assert.AreEqual(1, result.Draw);
            Assert.IsTrue(result.Columns.Count() > 0);
            Assert.AreEqual("SegmentKey", result.Columns.First().Data);

        }
    }

    public class Foo
    {
        public string name { get; set; }
    }
}
